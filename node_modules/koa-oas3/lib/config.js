"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const oas3_chow_chow_1 = require("oas3-chow-chow");
const bodyParser = require("koa-bodyparser");
function defaultErrorHandler(err, ctx) {
    if (err instanceof oas3_chow_chow_1.ChowError) {
        const json = err.toJSON();
        ctx.throw(400, err.message, Object.assign({ expose: true }, json));
    }
    throw err;
}
function validateConfig(cfg) {
    if (!cfg.file && !cfg.spec) {
        throw new Error('You must configure a Openapi File or a OpenAPIObject object');
    }
    return {
        file: cfg.file,
        spec: cfg.spec,
        enableUi: cfg.enableUi !== undefined ? cfg.enableUi : true,
        endpoint: cfg.endpoint || '/openapi.json',
        uiEndpoint: cfg.uiEndpoint || '/openapi.html',
        validateResponse: cfg.validateResponse || false,
        validatePaths: cfg.validatePaths || ['/'],
        swaggerUiBundleBasePath: cfg.swaggerUiBundleBasePath || '//unpkg.com/swagger-ui-dist@3/',
        errorHandler: cfg.errorHandler || defaultErrorHandler,
        qsParseOptions: cfg.qsParseOptions || { comma: true },
        requestBodyHandler: cfg.requestBodyHandler || {
            'application/json': bodyParser({
                extendTypes: {
                    json: ['application/json']
                },
                enableTypes: ['json']
            }),
            'text/*': bodyParser({
                extendTypes: {
                    text: ['text/*']
                },
                enableTypes: ['text']
            }),
            'application/x-www-form-urlencoded': bodyParser({
                extendTypes: {
                    form: ['application/x-www-form-urlencoded']
                },
                enableTypes: ['form']
            })
        },
        validationOptions: cfg.validationOptions
    };
}
exports.validateConfig = validateConfig;
//# sourceMappingURL=config.js.map