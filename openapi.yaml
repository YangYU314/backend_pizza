openapi: 3.0.0
info:
  title: APIS
  version: 1.0.0
paths:
  /user:
    post:
      summary: Create user
      description: Create user by request body
      tags:
      - User 
      requestBody:
        content:
          application/json:
            schema: 
              type: object
              properties:
                email:
                  type: string 
                name:
                  type: string
                password: 
                  type: string
                phone:
                  type: string
      responses:
        "201":
          description: User Created
        "400":
          description: Bad user request
  /user/{id}:
    get:
      summary: Get user
      description: Get a user by id
      tags:
        - User
      parameters:
        - in: path
          name: id
          description: id of user
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A user response
        "404":
          description: User no found
    delete:
      summary: Delete user
      description: Delete a user by id
      tags:
        - User
      parameters:
        - in: path
          name: id
          description: id of user
          required: true
          schema: 
            type: string
      responses:
        "201":
          description: Deleted!
        "404":
          description: User no found
    put:
      summary: Update User
      description: update a user by id
      tags:
        - User
      parameters:
        - in: path
          name: id
          description: id of user 
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema: 
              type: object
              properties:
                email:
                  type: string 
                name:
                  type: string
                password: 
                  type: string
                phone:
                  type: string
      responses:
        "201":
          description: Updated
        "404":
          description: User no found
  /products:
    get:
      summary: Get Products
      description: get all products
      tags:
        - Product
      responses:
        "200":
          description: Product has a response
        "404":
          description: Product no found
  /address:
    post:
      summary: Create address
      description: Create address by request body
      tags:
      - Address 
      requestBody:
        content:
          application/json:
            schema: 
              type: object
              properties:
                userId:
                  type: string
                unit:
                  type: number 
                streetNum:
                  type: number
                streetName: 
                  type: string
                suburb:
                  type: string
                postcode:
                  type: number
              required:
                    - streetNum
                    - streetName
                    - suburb
      responses:
        "201":
          description: Address Created
        "400":
          description: Bad address request
  /address/{id}:
    get:
      summary: Get addresses 
      description: Get addresses by user id
      tags:
        - Address
      parameters:
        - in: path
          name: id
          description: id of user
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Addresses response
        "404":
          description: User no found
  /stores:
    get:
      summary: Get stores
      description: get all stores
      tags:
        - Stores
      responses:
        "200":
          description: Stores has a response
        "404":
          description: Stores not found


       



                

  

